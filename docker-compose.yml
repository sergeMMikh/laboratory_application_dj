version: "3.9"

networks:
  lab_compose:

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST=192.168.1.160
      - POSTGRES_NAME=electrochemistry_lab
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=vrag
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=192.168.1.160
      - POSTGRES_NAME=electrochemistry_lab
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=vrag
    depends_on:
      - db
      - migration
    restart: always

  migration:
    image: uzman
    command: python manage.py migrate --noinput
    volumes:
      - .:/code
    depends_on:
      - db

  postgredb:
    image: postgres:latest
    environment:
      POSTGRES_DB: "new_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "vrag"
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5555:5432"
    volumes:
      - pgdata:/var/lib/postgresql/db
      - ./logs:/var/log
      - .:/docker-entrypoint-initdb.d
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - test_net_compose
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready - U smm -d new_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "s.m.mih@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "vrag"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/log/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
    networks:
      - lab_compose
